{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\gallery\\\\src\\\\components\\\\imageResults\\\\imageResults.js\";\n// import React,{Component} from 'react';\n// import PropTypes from 'prop-types';\n// import { Grid } from '@mui/material';\n// import IconButton from '@mui/material/IconButton';\n// import Zoom from '@mui/material/Zoom';\n// import Dialog from '@mui/material/Dialog';\n// import { Button } from '@mui/material';\n\n// class ImageResults extends Component{\n//     state={\n//         open:false,\n//         currentImg:''\n//     }\n//     handleOpen=img=>{\n//         this.setState({open:true,currentImg:img})\n//     }\n//     handleClose=()=>{\n//         this.setState({open:false});\n//     }\n//     render()\n//     {\n//         let imageList;\n//         const {images}=this.props\n\n//         // Rest of your code\n\n//         if (images) {\n//           imageList = (\n//             <Grid container spacing={1}>\n//               {images.map((img) => (\n//                 <Grid item xs={12} sm={6} md={4} lg={3} key={img.id}>\n//                   <Grid container alignItems=\"center\" justifyContent=\"center\">\n//                     <Grid item>\n//                       <img src={img.largeImageURL} alt=\"\" />\n//                     </Grid>\n//                     <Grid item>\n//                       <IconButton onClick={() => this.handleOpen(img.largeImageURL)}>\n//                         <Zoom />\n//                       </IconButton>\n//                     </Grid>\n//                   </Grid>\n//                 </Grid>\n//               ))}\n//             </Grid>\n//           );\n//         }\n\n//         // Rest of your code\n\n//         else{\n//             imageList=null;\n//         }\n//         const actions=[\n//             <Button  label=\"Close\" primary={true} onClick={this.handleClose}/>\n//         ]\n//         return(\n//             <div style={{marginLeft:50,marginRight:50,marginTop:20}}>\n//             {imageList}\n//             <Dialog\n//             actions={actions}\n//             modal={false}\n//             open={this.state.open}\n//             onRequestClose={this.handleClose}\n//             >\n//             <img src={this.state.currentImg} alt=\"\" style={{width:'100%'}} />\n//             </Dialog>\n//             </div>\n//         )\n//     }\n// }\n// ImageResults.propTypes={\n//     images:PropTypes.array.isRequired\n// }\n\n// export default ImageResults;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, IconButton, Dialog, Button } from '@mui/material';\nimport Zoom from '@mui/material/Zoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ImageResults extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      open: false,\n      currentImg: ''\n    };\n    this.handleOpen = img => {\n      this.setState({\n        open: true,\n        currentImg: img\n      });\n    };\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n  render() {\n    const {\n      images\n    } = this.props;\n    let imageList;\n    if (images) {\n      imageList = /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: images.map(img => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: img.largeImageURL,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => this.handleOpen(img.largeImageURL),\n                children: /*#__PURE__*/_jsxDEV(Zoom, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)\n        }, img.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this);\n    } else {\n      imageList = null;\n    }\n    const actions = [/*#__PURE__*/_jsxDEV(Button, {\n      label: \"Close\",\n      onClick: this.handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: 50,\n        marginRight: 50,\n        marginTop: 20\n      },\n      children: [imageList, /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        fullWidth: true,\n        maxWidth: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.currentImg,\n          alt: \"\",\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Close\",\n          onClick: this.handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n}\nImageResults.propTypes = {\n  images: PropTypes.array.isRequired\n};\nexport default ImageResults;","map":{"version":3,"names":["React","Component","PropTypes","Grid","IconButton","Dialog","Button","Zoom","jsxDEV","_jsxDEV","ImageResults","constructor","arguments","state","open","currentImg","handleOpen","img","setState","handleClose","render","images","props","imageList","container","spacing","children","map","item","xs","sm","md","lg","alignItems","justifyContent","src","largeImageURL","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","actions","label","style","marginLeft","marginRight","marginTop","onClose","fullWidth","maxWidth","width","propTypes","array","isRequired"],"sources":["D:/Coding/gallery/src/components/imageResults/imageResults.js"],"sourcesContent":["// import React,{Component} from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { Grid } from '@mui/material';\r\n// import IconButton from '@mui/material/IconButton';\r\n// import Zoom from '@mui/material/Zoom';\r\n// import Dialog from '@mui/material/Dialog';\r\n// import { Button } from '@mui/material';\r\n\r\n// class ImageResults extends Component{\r\n//     state={\r\n//         open:false,\r\n//         currentImg:''\r\n//     }\r\n//     handleOpen=img=>{\r\n//         this.setState({open:true,currentImg:img})\r\n//     }\r\n//     handleClose=()=>{\r\n//         this.setState({open:false});\r\n//     }\r\n//     render()\r\n//     {\r\n//         let imageList;\r\n//         const {images}=this.props\r\n\r\n    \r\n\r\n        \r\n\r\n//         // Rest of your code\r\n        \r\n//         if (images) {\r\n//           imageList = (\r\n//             <Grid container spacing={1}>\r\n//               {images.map((img) => (\r\n//                 <Grid item xs={12} sm={6} md={4} lg={3} key={img.id}>\r\n//                   <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n//                     <Grid item>\r\n//                       <img src={img.largeImageURL} alt=\"\" />\r\n//                     </Grid>\r\n//                     <Grid item>\r\n//                       <IconButton onClick={() => this.handleOpen(img.largeImageURL)}>\r\n//                         <Zoom />\r\n//                       </IconButton>\r\n//                     </Grid>\r\n//                   </Grid>\r\n//                 </Grid>\r\n//               ))}\r\n//             </Grid>\r\n//           );\r\n//         }\r\n        \r\n//         // Rest of your code\r\n        \r\n\r\n//         else{\r\n//             imageList=null;\r\n//         }\r\n//         const actions=[\r\n//             <Button  label=\"Close\" primary={true} onClick={this.handleClose}/>\r\n//         ]\r\n//         return(\r\n//             <div style={{marginLeft:50,marginRight:50,marginTop:20}}>\r\n//             {imageList}\r\n//             <Dialog\r\n//             actions={actions}\r\n//             modal={false}\r\n//             open={this.state.open}\r\n//             onRequestClose={this.handleClose}\r\n//             >\r\n//             <img src={this.state.currentImg} alt=\"\" style={{width:'100%'}} />\r\n//             </Dialog>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// ImageResults.propTypes={\r\n//     images:PropTypes.array.isRequired\r\n// }\r\n\r\n// export default ImageResults;\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, IconButton, Dialog, Button } from '@mui/material';\r\nimport Zoom from '@mui/material/Zoom';\r\n\r\nclass ImageResults extends Component {\r\n  state = {\r\n    open: false,\r\n    currentImg: ''\r\n  };\r\n\r\n  handleOpen = (img) => {\r\n    this.setState({ open: true, currentImg: img });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { images } = this.props;\r\n\r\n    let imageList;\r\n\r\n    if (images) {\r\n      imageList = (\r\n        <Grid container spacing={1}>\r\n          {images.map((img) => (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} key={img.id}>\r\n              <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n                <Grid item>\r\n                  <img src={img.largeImageURL} alt=\"\" />\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton onClick={() => this.handleOpen(img.largeImageURL)}>\r\n                    <Zoom />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      );\r\n    } else {\r\n      imageList = null;\r\n    }\r\n\r\n    const actions = [\r\n      <Button label=\"Close\" onClick={this.handleClose} />\r\n    ];\r\n\r\n    return (\r\n      <div style={{ marginLeft: 50, marginRight: 50, marginTop: 20 }}>\r\n        {imageList}\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"md\"\r\n        >\r\n          <img src={this.state.currentImg} alt=\"\" style={{ width: '100%' }} />\r\n          <Button label=\"Close\" onClick={this.handleClose} />\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nImageResults.propTypes = {\r\n  images: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ImageResults;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}