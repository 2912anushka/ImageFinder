{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\gallery\\\\src\\\\components\\\\imageResults\\\\imageResults.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Zoom from '@mui/material/Zoom';\nimport Dialog from '@mui/material/Dialog';\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ImageResults extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      open: false,\n      currentImg: ''\n    };\n    this.handleOpen = img => {\n      this.setState({\n        open: true,\n        currentImg: img\n      });\n    };\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n  render() {\n    let imageList;\n    const {\n      images\n    } = this.props;\n\n    // Rest of your code\n\n    if (images) {\n      imageList = /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: images.map(img => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: img.largeImageURL,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => this.handleOpen(img.largeImageURL),\n                children: /*#__PURE__*/_jsxDEV(Zoom, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this)\n        }, img.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this);\n    }\n\n    // Rest of your code\n    else {\n      imageList = null;\n    }\n    const actions = [/*#__PURE__*/_jsxDEV(Button, {\n      label: \"Close\",\n      primary: true,\n      onClick: this.handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: 50,\n        marginRight: 50,\n        marginTop: 20\n      },\n      children: [imageList, /*#__PURE__*/_jsxDEV(Dialog, {\n        actions: actions,\n        modal: false,\n        open: this.state.open,\n        onRequestClose: this.handleClose,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.currentImg,\n          alt: \"\",\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n}\nImageResults.propTypes = {\n  images: PropTypes.array.isRequired\n};\nexport default ImageResults;\n\n// import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import { Grid, IconButton, Dialog, Button } from '@mui/material';\n// import Zoom from '@mui/material/Zoom';\n\n// class ImageResults extends Component {\n//   state = {\n//     open: false,\n//     currentImg: ''\n//   };\n\n//   handleOpen = (img) => {\n//     this.setState({ open: true, currentImg: img });\n//   };\n\n//   handleClose = () => {\n//     this.setState({ open: false });\n//   };\n\n//   render() {\n//     const { images } = this.props;\n\n//     let imageList;\n\n//     if (images) {\n//       imageList = (\n//         <Grid container spacing={1}>\n//           {images.map((img) => (\n//             <Grid item xs={12} sm={6} md={4} lg={3} key={img.id}>\n//               <Grid container alignItems=\"center\" justifyContent=\"center\">\n//                 <Grid item>\n//                   <img src={img.largeImageURL} alt=\"\" />\n//                 </Grid>\n//                 <Grid item>\n//                   <IconButton onClick={() => this.handleOpen(img.largeImageURL)}>\n//                     <Zoom />\n//                   </IconButton>\n//                 </Grid>\n//               </Grid>\n//             </Grid>\n//           ))}\n//         </Grid>\n//       );\n//     } else {\n//       imageList = null;\n//     }\n\n//     const actions = [\n//       <Button label=\"Close\" onClick={this.handleClose} />\n//     ];\n\n//     return (\n//       <div style={{ marginLeft: 50, marginRight: 50, marginTop: 20 }}>\n//         {imageList}\n//         <Dialog\n//           open={this.state.open}\n//           onClose={this.handleClose}\n//           fullWidth\n//           maxWidth=\"md\"\n//         >\n//           <img src={this.state.currentImg} alt=\"\" style={{ width: '100%' }} />\n//           <Button label=\"Close\" onClick={this.handleClose} />\n//         </Dialog>\n//       </div>\n//     );\n//   }\n// }\n\n// ImageResults.propTypes = {\n//   images: PropTypes.array.isRequired\n// };\n\n// export default ImageResults;","map":{"version":3,"names":["React","Component","PropTypes","Grid","IconButton","Zoom","Dialog","Button","jsxDEV","_jsxDEV","ImageResults","constructor","arguments","state","open","currentImg","handleOpen","img","setState","handleClose","render","imageList","images","props","container","spacing","children","map","item","xs","sm","md","lg","alignItems","justifyContent","src","largeImageURL","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","actions","label","primary","style","marginLeft","marginRight","marginTop","modal","onRequestClose","width","propTypes","array","isRequired"],"sources":["D:/Coding/gallery/src/components/imageResults/imageResults.js"],"sourcesContent":["import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid } from '@mui/material';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { Button } from '@mui/material';\r\n\r\nclass ImageResults extends Component{\r\n    state={\r\n        open:false,\r\n        currentImg:''\r\n    }\r\n    handleOpen=img=>{\r\n        this.setState({open:true,currentImg:img})\r\n    }\r\n    handleClose=()=>{\r\n        this.setState({open:false});\r\n    }\r\n    render()\r\n    {\r\n        let imageList;\r\n        const {images}=this.props\r\n\r\n    \r\n\r\n        \r\n\r\n        // Rest of your code\r\n        \r\n        if (images) {\r\n          imageList = (\r\n            <Grid container spacing={1}>\r\n              {images.map((img) => (\r\n                <Grid item xs={12} sm={6} md={4} lg={3} key={img.id}>\r\n                  <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Grid item>\r\n                      <img src={img.largeImageURL} alt=\"\" />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <IconButton onClick={() => this.handleOpen(img.largeImageURL)}>\r\n                        <Zoom />\r\n                      </IconButton>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          );\r\n        }\r\n        \r\n        // Rest of your code\r\n        \r\n\r\n        else{\r\n            imageList=null;\r\n        }\r\n        const actions=[\r\n            <Button  label=\"Close\" primary={true} onClick={this.handleClose}/>\r\n        ]\r\n        return(\r\n            <div style={{marginLeft:50,marginRight:50,marginTop:20}}>\r\n            {imageList}\r\n            <Dialog\r\n            actions={actions}\r\n            modal={false}\r\n            open={this.state.open}\r\n            onRequestClose={this.handleClose}\r\n            >\r\n            <img src={this.state.currentImg} alt=\"\" style={{width:'100%'}} />\r\n            </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nImageResults.propTypes={\r\n    images:PropTypes.array.isRequired\r\n}\r\n\r\nexport default ImageResults;\r\n\r\n// import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { Grid, IconButton, Dialog, Button } from '@mui/material';\r\n// import Zoom from '@mui/material/Zoom';\r\n\r\n// class ImageResults extends Component {\r\n//   state = {\r\n//     open: false,\r\n//     currentImg: ''\r\n//   };\r\n\r\n//   handleOpen = (img) => {\r\n//     this.setState({ open: true, currentImg: img });\r\n//   };\r\n\r\n//   handleClose = () => {\r\n//     this.setState({ open: false });\r\n//   };\r\n\r\n//   render() {\r\n//     const { images } = this.props;\r\n\r\n//     let imageList;\r\n\r\n//     if (images) {\r\n//       imageList = (\r\n//         <Grid container spacing={1}>\r\n//           {images.map((img) => (\r\n//             <Grid item xs={12} sm={6} md={4} lg={3} key={img.id}>\r\n//               <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n//                 <Grid item>\r\n//                   <img src={img.largeImageURL} alt=\"\" />\r\n//                 </Grid>\r\n//                 <Grid item>\r\n//                   <IconButton onClick={() => this.handleOpen(img.largeImageURL)}>\r\n//                     <Zoom />\r\n//                   </IconButton>\r\n//                 </Grid>\r\n//               </Grid>\r\n//             </Grid>\r\n//           ))}\r\n//         </Grid>\r\n//       );\r\n//     } else {\r\n//       imageList = null;\r\n//     }\r\n\r\n//     const actions = [\r\n//       <Button label=\"Close\" onClick={this.handleClose} />\r\n//     ];\r\n\r\n//     return (\r\n//       <div style={{ marginLeft: 50, marginRight: 50, marginTop: 20 }}>\r\n//         {imageList}\r\n//         <Dialog\r\n//           open={this.state.open}\r\n//           onClose={this.handleClose}\r\n//           fullWidth\r\n//           maxWidth=\"md\"\r\n//         >\r\n//           <img src={this.state.currentImg} alt=\"\" style={{ width: '100%' }} />\r\n//           <Button label=\"Close\" onClick={this.handleClose} />\r\n//         </Dialog>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// ImageResults.propTypes = {\r\n//   images: PropTypes.array.isRequired\r\n// };\r\n\r\n// export default ImageResults;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}